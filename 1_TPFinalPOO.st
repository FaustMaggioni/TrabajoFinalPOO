Object subclass: #Client	instanceVariableNames: 'colSuscripciones nombre enPromocion colOfertas dni'	classVariableNames: ''	package: '1_TPFinalPOO'!!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 13:11'!getSuscripciones^colSuscripciones .! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 18:04'!getTupla: unCont |tup|tup:= OrderedCollection new.colSuscripciones do:[:unaSusc | 	|aux|	aux:= unaSusc tieneCont: unCont nombreCliente: self getDNI.	(aux size > 0)ifTrue: [		tup:= aux]].^tup.! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 20:12'!agregarSuscripcion: s|aux|(colSuscripciones  isEmpty )ifFalse: [ aux:= colSuscripciones at: 1. aux desactivar.].colSuscripciones add: s.s registrarPago: (s getPrecio) .! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:41'!estaEnPromocion^enPromocion ! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 12:51'!agregarSuscripcionDePromocion: tienda|t p susc|t:= (colOfertas at: 1) getTipo .p:= (colOfertas at: 1)getPorcentaje .colOfertas remove: (colOfertas at:1).(t = 'Gold')ifTrue: [ 		susc:= Gold crearEnTienda: tienda.]		ifFalse: [ 			(t = 'Silver')ifTrue: [ 				susc:= Silver crearEnTienda: tienda. ]			ifFalse:[ 				(t='Bronce')ifTrue:[					susc:= Bronce crearEnTienda: tienda.			 ] ifFalse:[						susc:= SuscPorItem crearEnTienda: tienda.		]	]].(colSuscripciones at:1)desactivar .colSuscripciones add: susc.susc registrarPago: ((susc getPrecio *100)/p).(colOfertas isEmpty ) ifTrue: [ 	enPromocion := false. ]! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 13:06'!getDNI^dni ! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 20:10'!getPagos|pagos|pagos:= OrderedCollection new.colSuscripciones do: [:unaSusc| pagos add: (unaSusc getPagos)].^pagos.! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 19:04'!iniciarConNombre: n yDNI: dnombre := n.colSuscripciones := SortedCollection new.colSuscripciones sort: [ :a :b | a getFecha >= b getFecha  ].enPromocion := false.dni:= d.colOfertas:= OrderedCollection new.! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:48'!verificarComprado: unContenido |comp| comp:= false.colSuscripciones do: [ :unaSusc | (unaSusc tieneA: unContenido) ifTrue: [ comp:=true ]  ].^comp.! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:51'!comprar: unContenido |devolucion comp unaSusc res|devolucion := ''.comp:= (self verificarComprado: unContenido) .Transcript show: comp.(comp)ifTrue: [ devolucion := 'Usted ya adquirió este item.' ]		 ifFalse: [ 			(colSuscripciones isEmpty)ifFalse:[			unaSusc := colSuscripciones at:1.			res:= unaSusc realizarCompra: unContenido .			(res) ifTrue: [ 				devolucion := 'Compra exitosa.' ]					ifFalse:[				devolucion:= 'No se puede comprar eso con suscripcion por item.'			 ].		]ifTrue: [devolucion:=  'No tiene suscripciones este cliente.' ].].^devolucion .! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:50'!solicitarPromocionDeTienda: t |xx cantCompras i res susc tam|res:=false.xx:= 5.cantCompras := 20."valores de ejemplo"susc:= colSuscripciones at: 1.(susc estaActiva )ifTrue: [tam= susc  getCantidadCompras.(tam > cantCompras )ifTrue: [ 				(i <= xx)whileTrue: [ 					colOfertas add: (Oferta crearConTipo: 'Silver' Porcentaje: 50). 					i:= i+1.					 ].	 ] ].^res.! !!Client methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:42'!iniciarConNombre: nnombre := n.colSuscripciones := SortedCollection new.colSuscripciones sort: [ :a :b | a getFecha > b getFecha  ].enPromocion := false.colOfertas:= OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Client class	instanceVariableNames: ''!!Client class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 17:05'!crearConNombre: n|c|c:= self new.c iniciarConNombre: n.^c! !!Client class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 12:54'!crearConNombre: n yDNI: d|c|c:= self new.c iniciarConNombre: n yDNI: d.^c! !Object subclass: #Cont	instanceVariableNames: 'nombre precio'	classVariableNames: ''	package: '1_TPFinalPOO'!!Cont methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:27'!esPeliculaOJuego^false! !!Cont methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 13:22'!getNombre^nombre .! !!Cont methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 18:07'!esPelicula ^false.! !!Cont methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:20'!encontrarDescuento: tipo en: colDesc |desc|desc:= 0.colDesc do: [ :unDesc | (unDesc getNombreTipo = tipo)	ifTrue: [  desc:= unDesc getPorcentaje .							 ] ].^desc.				! !!Cont methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:18'!getDescuento: colDesc |tip desc|tip:= ' '.desc:= self encontrarDescuento: tip en: colDesc .^desc.! !!Cont methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:36'!getPrecio ^precio .! !!Cont methodsFor: 'inicializadores' stamp: 'FaustinoMaggioni 10/18/2020 16:10'!iniciarNombre: n Precio: pprecio := p.nombre := n.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cont class	instanceVariableNames: ''!!Cont class methodsFor: 'constructor' stamp: 'FaustinoMaggioni 10/18/2020 16:17'!crearNombre: n Precio: p|c|c:= self new.c iniciarNombre: n Precio: p.^c.! !Cont subclass: #App	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!App methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:29'!getDescuento: colDesc |tipo desc|tipo := 'Aplicacion'.desc:= super encontrarDescuento: tipo en: colDesc .^desc.! !Morph subclass: #CrearTienda	instanceVariableNames: 'tienda'	classVariableNames: ''	package: '1_TPFinalPOO'!!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 18:51'!crearTiendaYMostrarOpciones|b1 b2 b4 b5 b6 b7 b8 b9 b10 dist i|self removeAllMorphs.i:=0.dist:= 30.b1:= SimpleButtonMorph new  target: [self crearClientesYAgregarlos];  label: ' Crear clientes y agregarlos a la tienda ';  color: Color black;  actionSelector: #value.b1 position: (10@(dist*i)+5) + self position.i:=i+1.b2:= SimpleButtonMorph new  target: [self crearSuscripciones];  label: ' Crear y asignar una suscripción ';  color: Color black;  actionSelector: #value.b2 position: (10@(dist*i)+5) + self position.i:=i+1.b4:= SimpleButtonMorph new  target: [self comprarContenido];  label: ' Comprar contenido ';  color: Color black;  actionSelector: #value.b4 position: (10@(dist*i)+5) + self position.i:=i+1.b5:= SimpleButtonMorph new  target: [self solicitarPromo];  label: ' Solicitar la aplicación de una promoción a la suscripcion ';  color: Color black;  actionSelector: #value.b5 position: (10@(dist*i)+5) + self position.i:=i+1.b6:= SimpleButtonMorph new  target: [self buscarCliXDNIyVerSuscs];  label: ' Buscar un cliente por DNI y ver sus suscripciones ';  color: Color black;  actionSelector: #value.b6 position: (10@(dist*i)+5) + self position.i:=i+1.b7:= SimpleButtonMorph new  target: [self buscarCliXDNIyVerPagos];  label: ' Buscar un cliente por DNI y ver sus pagos ';  color: Color black;  actionSelector: #value.b7 position: (10@(dist*i)+5) + self position.i:=i+1.b8:= SimpleButtonMorph new  target: [self buscarContPorNombre];  label: ' Buscar contenido por nombre ';  color: Color black;  actionSelector: #value.b8 position: (10@(dist*i)+5) + self position.i:=i+1.b9:= SimpleButtonMorph new  target: [self clienteYSuscripcionesXContenido];  label: ' Ver qué clientes y con qué suscripción compraron algún contenido ';  color: Color black;  actionSelector: #value.b9 position: (10@(dist*i)+5) + self position.i:=i+1.b10:= SimpleButtonMorph new  target: [self verPromos];  label: ' Ver promociones ';  color: Color black;  actionSelector: #value.b10 position: (10@(dist*i)+5) + self position.self addMorph: b1. self addMorph: b2.  self addMorph: b4. self addMorph: b5. self addMorph: b6. self addMorph: b7. self addMorph: b8. self addMorph: b9. self addMorph: b10.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/10/2021 15:45'!asignarSuscripciones! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/25/2021 21:39'!buscarContPorNombre|cont nom boton boton1|self removeAllMorphs.self bounds: ((25@25) extent: (500@600)).self color: Color lightMagenta.self borderColor: Color black.self borderWidth: 3.nom:= UIManager default request: 'Ingrese el nombre del contenido'.cont:= tienda getContenidoPorNombre: nom.(cont isNil)ifTrue: [ 	UIManager default inform: 'No existe tal contenido'.	 ]ifFalse:[	UIManager default inform: 'NOMBRE: ',nom,' PRECIO: ',(cont getPrecio)asString.	boton:= SimpleButtonMorph new  target: [self  comprarContenidoExistente: cont ];  label: ' Comprar ',nom;  color: Color black;  actionSelector: #value.boton position:  (200@300).self addMorph: boton.	].boton1:= SimpleButtonMorph new  target: [self crearTiendaYMostrarOpciones   ];  label: ' Volver a inicio ';  color: Color black;  actionSelector: #value.boton1 position:  (200@250).self addMorph: boton1.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 11/11/2020 22:34'!getTienda^tienda.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:55'!verPromos|promos txt tam i|promos:= tienda getOfertas.txt:='PROMOCIONES: '.i:= 1.tam:= promos size.[ i<=tam ]whileTrue:[	txt:= txt,(promos at:i)asString.	(i=tam)ifTrue:[		txt:= txt,' .'.]	ifFalse:[		txt:= txt,' ,'.].	i:=i+1.	].UIManager default inform: txt.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:55'!añadirContenido: ctienda agregarContenido: c.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 11/11/2020 23:13'!guardaTiendatienda:= TiendaAmazing crearTienda .tienda addDependent: self.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:48'!solicitarPromo|promo1 cli dni res|promo1:= (tienda getOfertas at: 1).dni:= (UIManager default request: 'Para acceder a la promocion ',promo1,' ingrese su dni.')asNumber.cli:= tienda ClientePorDNI: dni.Transcript show: cli.(cli isNil)ifFalse: [ 	 res:= cli solicitarPromocionDeTienda: tienda. 	 (res)ifTrue: [		UIManager default inform: 'ACCEDIÓ A LA PROMO CON ÉXITO']	ifFalse:[		UIManager default inform: 'No cuenta con lo necesario para esta promoción.']	]ifTrue:[	UIManager default inform: 'No hay clientes con ese dni'].! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:52'!mostrarEnMundoself openInWorld: self currentWorld.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:52'!iniciarCrearTienda|boton|tienda:= TiendaAmazing crearTienda .self initialize .self bounds: ((25@25) extent: (500@600)).self color: Color lightMagenta.self borderColor: Color black.self borderWidth: 3.boton:= SimpleButtonMorph new  target: [self crearTiendaYMostrarOpciones  ];  label: ' CREAR TIENDA ';  color: Color black;  actionSelector: #value.boton position:  (250@300).self addMorph: boton.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/25/2021 21:38'!comprarContenidoExistente: cont|dni cliente contenido nomC res|dni:= (UIManager default request: 'Ingrese con su DNI')asNumber.cliente:= tienda ClientePorDNI: dni.(cliente isNil)ifFalse: [  res:= cliente comprar: cont.UIManager default inform: res.]ifTrue:[	UIManager default inform: 'No existe cliente con ese DNI'.	].self crearTiendaYMostrarOpciones .! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/10/2021 16:10'!crearClientesYAgregarlos|nombre dni cliente|nombre:= UIManager default request: 'Nombre'.dni:= (UIManager default request: 'DNI') asNumber .cliente:= Client crearConNombre: nombre yDNI: dni.tienda agregarCliente: cliente.! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:48'!buscarCliXDNIyVerPagos|dni cliente|dni:= (UIManager default request: 'Ingrese DNI')asNumber .cliente :=  tienda ClientePorDNI: dni.(cliente isNil )ifFalse: [ 	|col txt tam i|	col:= cliente getPagos .	tam:= col size.	i:= 1.	txt:=''.	[ i<=tam ]whileTrue:[		|colAux j tamAux|		colAux:= col at: i.		j:=1.		tamAux:= colAux size.		[ j<=tamAux ]whileTrue:[		(j==1)ifTrue: [ 			txt:= txt,' PAGO SUSCRIPCIÓN: ',(colAux at: j)asString,' Pago contenidos: '. ]		ifFalse:[			txt:= txt,' ',(colAux at: j)asString.		].		j:= j+1.	].	txt:= txt,'. '.	i:= i+1.].	UIManager default inform: 'PAGOS: ', txt.  ]ifTrue:[	UIManager default inform: 'No hay clientes con ese dni'.]! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/25/2021 21:35'!comprarContenidoExistente! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 20:12'!crearSuscripciones|tipo error cliente dni susc|dni:= (UIManager default request: 'Ingrese el dni del cliente al cual le agregará una suscripción') asNumber .cliente:= tienda ClientePorDNI: dni.(cliente isNil )ifFalse: [  error:= true. [error=true] whileTrue: [  tipo:= UIManager default request: '¿Qué tipo de suscripción quiere crear? Opciones: Por item, Gold, Bronce, Silver.'.((tipo= 'Gold') | (tipo='Bronce') | (tipo= 'Silver') | (tipo= 'Por item'))ifTrue: [ error:=false ]ifFalse:[	UIManager default inform: 'Ingrese una suscripción válida'.]].(tipo= 'Gold')ifTrue: [ 	susc:= Gold crearEnTienda: tienda]	ifFalse: [ 		(tipo= 'Silver')ifTrue: [ 			susc:= Silver crearEnTienda: tienda ] 		ifFalse: [			(tipo='Bronce')ifTrue:[				susc:= Bronce crearEnTienda: tienda]			ifFalse: [ 				susc:= SuscPorItem crearEnTienda: tienda .				Transcript show: 'ITEM'.].			]].cliente agregarSuscripcion: susc.UIManager default inform: 'Suscripción agregada con éxito'.]ifTrue: [ 	 UIManager default inform: 'No existe cliente con tal DNI. '. ]! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/10/2021 18:58'!comprarContenido|dni cliente contenido nomC res|dni:= (UIManager default request: 'Ingrese con su DNI')asNumber.cliente:= tienda ClientePorDNI: dni.(cliente isNil)ifFalse: [  nomC:= UIManager default request: '¿Cual es el nombre del contenido que quiere comprar?'.contenido := tienda getContenidoPorNombre: nomC.(contenido isNil)ifFalse: [ res:= cliente comprar: contenido.UIManager default inform: res.]ifTrue:[UIManager default inform: 'No existe contenido con ese nombre'.]]ifTrue:[	UIManager default inform: 'No existe cliente con ese DNI'.	]! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 18:15'!clienteYSuscripcionesXContenido|col nom cont txt i tam|nom:= UIManager default request:'Ingrese el nombre del contenido.'.cont:= tienda getContenidoPorNombre: nom.(cont isNil)ifFalse: [  col:= tienda clientesYSuscripcionesCompraron: cont.txt:= 'DNI y sucripción de los clientes al comprar ',nom,': '.i:= 1.tam:= col size.[ i<=tam ]whileTrue: [ 	|x|	x:= col at: i.	txt:= txt, (x at: 1)asString,', ', (x at: 2)asString,' . ' .	i:= i+1.	].UIManager default inform: txt.]ifTrue:[	UIManager default inform: 'No existe contenido con ese nombre'.	]! !!CrearTienda methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:42'!buscarCliXDNIyVerSuscs|dni cliente suscripciones|dni:= (UIManager default request: 'Ingrese el DNI del cliente en cuestión')asNumber.cliente:= (tienda ClientePorDNI: dni).(cliente isNil )ifFalse: [ 	suscripciones:= cliente getSuscripciones. 	(suscripciones isEmpty)ifTrue: [		UIManager default inform:'Este cliente no tiene suscripciones']	ifFalse:[		|i aux tam|		aux:=''.		tam:= suscripciones size.		i:= 1.		[ i<=tam ]whileTrue: [ 		aux:=aux,', ',(suscripciones at:i)asString .		i:=i+1.		 ].		UIManager default inform: 'Sucripciones: ',aux .		].	]	ifTrue:[		UIManager default inform: 'No hay cliente con ese dni'		].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CrearTienda class	instanceVariableNames: ''!!CrearTienda class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 11/10/2020 16:55'!crearTiendaVisual|a|a:= super new.a iniciarCrearTienda .^a.! !Object subclass: #Descuento	instanceVariableNames: 'tipoCont porcentaje'	classVariableNames: ''	package: '1_TPFinalPOO'!!Descuento methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:37'!iniciarConTipo: t Porcentaje: ptipoCont := t.porcentaje :=p.! !!Descuento methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:37'!getNombreTipo^tipoCont .! !!Descuento methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:38'!getPorcentaje^porcentaje ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Descuento class	instanceVariableNames: ''!!Descuento class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:38'!crearConTipo: t Porcentaje: p|d|d:= self new.d iniciarConTipo: t Porcentaje:p.^d. ! !Cont subclass: #Jueg	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!Jueg methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:29'!getDescuento: colDesc |tipo desc|tipo := 'Juego'.desc:= super encontrarDescuento: tipo en: colDesc .^desc.! !!Jueg methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:27'!esPeliculaOJuego ^true! !Cont subclass: #Libr	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!Libr methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:29'!getDescuento: colDesc |tipo desc|tipo := 'Libro'.desc:= super encontrarDescuento: tipo en: colDesc .^desc.! !Object subclass: #Oferta	instanceVariableNames: 'tipo porcentaje'	classVariableNames: ''	package: '1_TPFinalPOO'!!Oferta methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:39'!iniciarTipo: t Porcentaje: ptipo := t.porcentaje := p.! !!Oferta methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:37'!getTipo ^tipo .! !!Oferta methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:37'!getPorcentaje ^porcentaje .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Oferta class	instanceVariableNames: ''!!Oferta class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:40'!crearConTipo: t Porcentaje: p|o|o:= self new.o iniciarConTipo: t Porcentaje:  p.^o.! !Object subclass: #Paga	instanceVariableNames: 'precioPagado fecha contenido'	classVariableNames: ''	package: '1_TPFinalPOO'!!Paga methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 19:54'!getPrecio Transcript show:'PRECIO ITEM:',(precioPagado)asString .^precioPagado .! !!Paga methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:34'!iniciarConPrecio: p Fecha: f Contenido: cprecioPagado :=p.fecha := f.contenido := c.! !!Paga methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 18:10'!getContenido^contenido .! !!Paga methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 16:04'!compro: unCont ^self getContenido = unCont.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Paga class	instanceVariableNames: ''!!Paga class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:36'!crearConPrecioPagado: p Fecha: f Cont: c|x|x:= self new.x iniciarConPrecio: p Fecha: f Contenido:c.^x. ! !Object subclass: #PagoSuscripcion	instanceVariableNames: 'precio'	classVariableNames: ''	package: '1_TPFinalPOO'!!PagoSuscripcion methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 12:35'!iniciarConPrecio: pprecio:= p.! !!PagoSuscripcion methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 19:30'!getPrecio ^precio.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PagoSuscripcion class	instanceVariableNames: ''!!PagoSuscripcion class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 12:35'!crearConPrecio: p|a|a:= self new.a iniciarConPrecio: p.^a.! !Cont subclass: #Pelic	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!Pelic methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 18:08'!esPelicula ^true! !!Pelic methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:34'!getDescuento: colDesc |tipo desc|tipo := 'Pelicula'.desc:= super encontrarDescuento: tipo en: colDesc .^desc.! !!Pelic methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:27'!esPeliculaOJuego ^self esPelicula .! !Object subclass: #Susc	instanceVariableNames: 'fecha activa colPagos pago precio pos'	classVariableNames: ''	package: '1_TPFinalPOO'!!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:43'!estaActiva^activa ! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 16:07'!tieneCont: unCont nombreCliente: nom|res|res:= OrderedCollection new.colPagos do: [ :unPago | 	(unPago compro: unCont)ifTrue: [ 		res add: nom.		res add: self getTipo . ]	].^res.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 18:20'!tieneA: unContenido |comp|comp:= false.colPagos do: [ :unPago | ((unPago getContenido) = unContenido) ifTrue: [ comp:=true ]  ].^comp .! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 12:48'!getPrecio^precio! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:42'!getFecha ^fecha ! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 16:10'!getCantidadCompras^colPagos size ! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/10/2021 15:29'!iniciarfecha:= Date today.activa := true.colPagos := OrderedCollection new.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 19:58'!getPagos|col|col:= OrderedCollection new.col add: (pago getPrecio) .colPagos do: [ :unPago | col add: (unPago getPrecio)].Transcript show: col.^col.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 18:37'!registrarUnPago: precio cont: unContenido |unPago|unPago := Paga crearConPrecioPagado: precio Fecha: Date today Cont: unContenido .colPagos add: unPago .! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 18:03'!desactivaractiva := false.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 12:48'!precioAPagar: unContenido |pr|pr:= unContenido getPrecio .^pr.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 16:08'!esBronce^false.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:01'!realizarCompra: unContenido |res|res:= false.(activa )ifTrue: [  precio:= (self precioAPagar: unContenido) .(precio = -1)ifFalse: [ 	res:= true.	self registrarUnPago: precio cont: unContenido  ].].^res.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 12:47'!registrarPago: ppago:= PagoSuscripcion crearConPrecio: p.! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 15:47'!getTipo^''! !!Susc methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 16:03'!tieneCont: unCont |res|res:= OrderedCollection new.colPagos do: [ :unPago | 	(unPago compro: unCont)ifTrue: [ 		res add: unCont getNombre.		res add: self getTipo . ]	].^res.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Susc class	instanceVariableNames: ''!!Susc class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:43'!crear|s|s:= self new.s iniciar.^s.! !Susc subclass: #SuscPorItem	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!SuscPorItem methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:27'!precioAPagar: unContenido |pr|pr:= -1.(unContenido esPeliculaOJuego)ifFalse: [ 										pr:= super precioAPagar: unContenido  ].^pr.! !!SuscPorItem methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:08'!iniciarEnTienda: tpos:= 4.precio :=  t getPrecioAt:pos .UIManager default inform: 'POR ITEM ',(precio)asString.! !!SuscPorItem methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 15:48'!getTipo^'Por item'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SuscPorItem class	instanceVariableNames: ''!!SuscPorItem class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 16:50'!crearPorItemEnTienda: t|x|x:= super crear .x iniciarEnTienda: t.^x.! !!SuscPorItem class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 16:50'!crearEnTienda: t|x|x:= super crear .x iniciarEnTienda: t.^x.! !Susc subclass: #SuscPorMes	instanceVariableNames: 'colPeliculas colDescuentos descJuegos'	classVariableNames: ''	package: '1_TPFinalPOO'!!SuscPorMes methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/20/2020 11:25'!precioAPagar: unContenido |pr desc|pr:= super precioAPagar: unContenido .desc:= unContenido getDescuento: colDescuentos.desc:= (100-desc)/100.pr:= pr*desc.^pr. ! !!SuscPorMes methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 18:21'!tieneA: unContenido |comp|comp:= super tieneA: unContenido .(comp)ifFalse: [ 	colPeliculas do:[:unaPeli| (unaPeli = unContenido)ifTrue:[comp:=true ].]		].^comp! !!SuscPorMes methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/13/2021 19:49'!realizarCompra: unContenido |precioA esPeli |precioA := super precioAPagar: unContenido .esPeli:= unContenido esPelicula .(esPeli )ifTrue: [colPeliculas add: unContenido  ]ifFalse:[super registrarUnPago: precioA  cont: unContenido.].^true.! !!SuscPorMes methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:51'!iniciarMescolPeliculas := OrderedCollection new.colDescuentos := OrderedCollection new.descJuegos := 0.colDescuentos add: (Descuento crearConTipo: 'Pelicula' Porcentaje: 100).colDescuentos add: (Descuento crearConTipo: 'Juego' Porcentaje: descJuegos ).colDescuentos add: (Descuento crearConTipo: 'Aplicacion' Porcentaje: 30).colDescuentos add: (Descuento crearConTipo: 'Libro' Porcentaje: 50).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SuscPorMes class	instanceVariableNames: ''!!SuscPorMes class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:52'!crear |sm|sm:= super crear.sm iniciarMes .^sm! !SuscPorMes subclass: #Bronce	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!Bronce methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:09'!iniciarBronceEnTienda: tdescJuegos := 3.pos:= 1.precio :=  t getPrecioAt:pos .UIManager default inform: 'BRONCE ',(precio)asString.! !!Bronce methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 16:09'!esBronce ^true.! !!Bronce methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 15:48'!getTipo^'Bronce'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Bronce class	instanceVariableNames: ''!!Bronce class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:37'!crearEnTienda: t|b|b:= super crear .b iniciarBronceEnTienda: t.^b.! !SuscPorMes subclass: #Gold	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!Gold methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:09'!iniciarGoldEnTienda: tdescJuegos := 33.pos:= 3.precio :=  t getPrecioAt:pos .UIManager default inform: 'ORO ',(precio)asString.! !!Gold methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 15:48'!getTipo^'Gold'! !!Gold methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:54'!iniciarGolddescJuegos := 33.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Gold class	instanceVariableNames: ''!!Gold class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:34'!crearEnTienda: t|g|g:=super crear.g iniciarGoldEnTienda: t .^g.! !!Gold class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:54'!crear |g|g:=super crear.g iniciarGold .^g.! !SuscPorMes subclass: #Silver	instanceVariableNames: ''	classVariableNames: ''	package: '1_TPFinalPOO'!!Silver methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:52'!iniciarSilverdescJuegos := 12.! !!Silver methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:09'!iniciarSilverEnTienda: tdescJuegos := 12.pos:= 2.precio :=  t getPrecioAt:pos .UIManager default inform: 'SILVER ',(precio)asString.! !!Silver methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 15:48'!getTipo^'Silver'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Silver class	instanceVariableNames: ''!!Silver class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:34'!crearEnTienda: t|sil|sil:= super crear.sil iniciarSilverEnTienda: t .^sil.! !!Silver class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 16:53'!crear |sil|sil:= super crear.sil iniciarSilver .^sil.! !Object subclass: #TiendaAmazing	instanceVariableNames: 'colClientes colContenido precios ofertas'	classVariableNames: ''	package: '1_TPFinalPOO'!!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 16:16'!verOfertas^ofertas.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:28'!getPrecioBronce^precios at: 1.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:56'!iniciarTiendaself addDependent: CrearTienda.colClientes :=  OrderedCollection new.colContenido := OrderedCollection new."bronce, silver, oro, xitem"precios := OrderedCollection new.precios add: 100. precios add: 200. precios add: 300. precios add: 50.ofertas:= OrderedCollection new.ofertas add: 'Los clientes que tienen suscripción mensual “bronce” y que han superado unacantidad de compras indicada, se les ofrece cambiar a suscripción “silver” al 50% delvalor original, durante 5 meses'! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:53'!getContenidos^colContenido .! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/10/2021 16:46'!ClientePorDNI: d|c cli suscs|c:= colClientes select: [ :cl| cl getDNI = d ].(c isEmpty )ifFalse: [  cli:= c at: 1.].^cli.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:29'!getPrecioOro^precios at: 3.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:55'!agregarContenido: ccolContenido add: c.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:52'!getContenidoPorNombre: n|col cont|col:= colContenido select: [:unCont | (unCont getNombre) = n].Transcript show: col.(col isEmpty)ifFalse: [ cont:= col at: 1 ].^cont.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:28'!getPrecioSilver^precios at: 2.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 13:11'!suscripcionesClientePorDNI: d|c cli suscs|c:= colClientes select: [ :cl| cl getDNI = d ].cli:= c at: 1.suscs := cli getSuscripciones .^suscs.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 17:08'!agregarCliente: ccolClientes add: c! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 13:18'!pagosPorDNI: d|c cli suscs|c:= colClientes select: [ :cl| cl getDNI = d ].cli:= c at: 1.^cli getPagos.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 16:16'!agregarOferta: ofofertas add: of.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/21/2020 15:29'!getPrecioXItem^precios at: 4.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/9/2021 15:57'!clientesYSuscripcionesCompraron: unCont |col|col:= OrderedCollection new.colClientes do: [ :unCliente | 			|aux|			aux:= unCliente getTupla: unCont.			(aux size > 0) ifTrue: [				col add: aux.]].^col.! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/11/2021 22:48'!getOfertas^ofertas .! !!TiendaAmazing methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 1/16/2021 17:08'!getPrecioAt: x^precios at: x.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TiendaAmazing class	instanceVariableNames: ''!!TiendaAmazing class methodsFor: 'as yet unclassified' stamp: 'FaustinoMaggioni 10/18/2020 17:08'!crearTienda|t|t:= self new.t iniciarTienda .^t.! !